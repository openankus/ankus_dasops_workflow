# \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC811\uC18D \uD3EC\uD2B8
server.port=9091

## \uC0AC\uC6A9\uC790 \uBE44\uBC00\uBC88\uD638 \uCD08\uAE30\uD654 \uAC12
user.password = ankus

server.name=ankus_dasops_workflow_manager


## DB \uC5F0\uACB0\uC815\uBCF4 \uC124\uC815 (\uC9C0\uC6D0 DBMS: PostgreSQL)
spring.datasource.url=
spring.jpa.properties.hibernate.default_schema=
spring.datasource.hikari.schema=
spring.datasource.username=
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

# jpa \uC124\uC815
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

## JPA \uC124\uC815
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.check_nullability=true
#logging.level.org.hibernate.type.descriptor.sql=trace

# JSON \uC124\uC815
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Thymeleaf \uC124\uC815
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true

# Live reload
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# \uB85C\uADF8 \uBCF4\uAD00 \uCD5C\uB300 \uAE30\uD55C \uC77C\uC218
logging.logback.rollingpolicy.max-history=90
logging.logback.rollingpolicy.max-file-size=100MB
logging.file.name=${ankus.home}/logs/log.txt


# \uD30C\uC77C\uC5C5\uB85C\uB4DC \uCD5C\uB300 \uC6A9\uB7C9
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# ankus Root \uB514\uB809\uD130\uB9AC \uC124\uC815
ankus.home=${user.home}/ankus_dasops/

# \uC815\uC801 \uB9AC\uC18C\uC2A4 \uC124\uC815
spring.web.resources.static-locations=classpath:/static/

## \uD30C\uC774\uC36C \uC2E4\uD589\uD658\uACBD \uAD6C\uB3D9 \uC2E4\uD589\uBA85\uB839\uC5B4
## Python\uC758 \uACBD\uC6B0: [Python \uD648 \uB514\uB809\uD130\uB9AC \uACBD\uB85C]/bin/activate
## Python \uAC00\uC0C1\uD654\uC758 \uACBD\uC6B0: [Python \uAC00\uC0C1\uD658\uACBD \uD648 \uB514\uB809\uD130\uB9AC \uACBD\uB85C]/Scripts/activate
## \uC708\uB3C4\uC6B0\uC988 Anaconda\uC758 \uACBD\uC6B0: [Anaconda \uD648 \uB514\uB809\uD130\uB9AC \uACBD\uB85C]/Scripts/activate.bat [\uAC00\uC0C1\uD658\uACBD \uC774\uB984]
## \uB9AC\uB205\uC2A4 Anaconda\uC758 \uACBD\uC6B0: conda activate [\uAC00\uC0C1\uD658\uACBD \uC774\uB984]
#ankus.python.venv.activate_cmd=C:/Users/ejrtn/ankus_advance/python_venv/Scripts/activate.bat

# jupyter lab\uC758 root directory(\uC0AC\uC6A9\uC790 \uC791\uC5C5\uACF5\uAC04 \uB514\uB809\uD130\uB9AC \uC124\uC815)
ankus.jupyter.workspace=${user.home}/ankus_dasops/ankus_user_workspace/

# jupyter lab \uC2E4\uD589 \uD3EC\uD2B8(\uAE30\uBCF8\uAC12: 8888)
ankus.jupyter.port=8888

# \uC6CC\uD06C\uD50C\uB85C\uC6B0 \uB85C\uADF8(\uC2E4\uD589\uC774\uB825) \uBCF4\uAD00\uC77C(\uAE30\uBCF8\uAC12: 90)
ankus.workflow.log.max-days=90

spring.profiles.active=onycom 